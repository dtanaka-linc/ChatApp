<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChatAppServer</name>
    </assembly>
    <members>
        <member name="T:ChatAppServer.Models.ModelBase">
            <summary>
            全てのモデルで共通のプロパティをまとめたクラス
            </summary>
        </member>
        <member name="M:ChatAppServer.Models.ChatAppDbContext.SaveChanges">
            <summary>
            エンティティの新規作成時または更新時にCreatedAtとUpdatedAtを自動で現在時刻に設定する
            </summary>
            <returns>SaveChangesの実行結果</returns>
        </member>
        <member name="M:ChatAppServer.Models.ChatAppDbContext.HasCreatedAt(System.Type)">
            <summary>
            条件にあったCreatedAtプロパティを持つエンティティがあるするかどうかを判定する
            </summary>
            <param name="type">エンティティの型</param>
            <returns>条件にあったCreatedAtプロパティを持つエンティティの有無</returns>
        </member>
        <member name="M:ChatAppServer.Models.ChatAppDbContext.HasUpdatedAt(System.Type)">
            <summary>
            条件にあったUpdatedAtプロパティを持つエンティティがあるするかどうかを判定する
            </summary>
            <param name="type">エンティティの型</param>
            <returns>条件にあったUpdatedAtプロパティを持つエンティティの有無</returns>
        </member>
        <member name="P:ChatAppServer.Models.ChatLog.User">
            <summary>
            Userモデルとのリレーション用プロパティ
            </summary>
        </member>
        <member name="P:ChatAppServer.Models.User.ChatLogs">
            <summary>
            ChatLogモデルとのリレーション用プロパティ
            </summary>
        </member>
        <member name="F:ChatAppServer.Form1.components">
            <summary>
            必要なデザイナー変数です。
            </summary>
        </member>
        <member name="M:ChatAppServer.Form1.Dispose(System.Boolean)">
            <summary>
            使用中のリソースをすべてクリーンアップします。
            </summary>
            <param name="disposing">マネージド リソースを破棄する場合は true を指定し、その他の場合は false を指定します。</param>
        </member>
        <member name="M:ChatAppServer.Form1.InitializeComponent">
            <summary>
            デザイナー サポートに必要なメソッドです。このメソッドの内容を
            コード エディターで変更しないでください。
            </summary>
        </member>
        <member name="M:ChatAppServer.Program.Main">
            <summary>
            アプリケーションのメイン エントリ ポイントです。
            </summary>
        </member>
        <member name="T:ChatAppServer.Repository.UserRepository">
            <summary>
            Userモデルにアクセスし新規登録や認証を行うメソッド群
            </summary>
        </member>
        <member name="M:ChatAppServer.Repository.UserRepository.CreateUser(System.String,System.String)">
            <summary>
            名前とパスワードをUsersに追加し、Userクラス型のデータとして返す
            </summary>
            <param name="userName">ログインフォームで入力されたユーザー名</param>
            <param name="password">ログインフォームで入力されたパスワード</param>
            <returns>Userクラス型のデータ</returns>
        </member>
        <member name="M:ChatAppServer.Repository.UserRepository.FindByUserName(System.String)">
            <summary>
            ユーザー名で検索する
            </summary>
            <param name="userName">ユーザー名</param>
            <returns>ユーザー名で検索した結果</returns>
        </member>
        <member name="M:ChatAppServer.Repository.UserRepository.ExistsUserName(System.String)">
            <summary>
            新規登録フォームで入力されたユーザー名と同名のレコードが存在するかどうかを確認する
            </summary>
            <param name="userName"></param>
            <returns>入力されたユーザー名の同名のレコードの有無</returns>
        </member>
        <member name="M:ChatAppServer.Service.TcpService.listen(System.String,System.Int32,System.Int32)">
            <summary>
            サーバーを立てる
            </summary>
            <param name="host">ホスト名（アドレス）</param>
            <param name="port">ポート番号</param>
            <param name="backlog">保留中の接続のキューの最大長
            （ソケットが受け入れしていない接続要求を何個まで保持するかの最大値）</param>
        </member>
        <member name="T:ChatAppServer.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:ChatAppServer.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されるキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:ChatAppServer.Properties.Resources.Culture">
            <summary>
              すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
    </members>
</doc>
